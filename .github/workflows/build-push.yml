name: test-task-build-deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'     
        required: true
        type: choice
        options:
              - 'v1'
              - 'v2'
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Variables assignment
        run: echo "AppVersion=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        env:
          AppVersion: ${{ env.AppVersion }}
      - name: Repository checkout
        uses: actions/checkout@v4
      - name: Unit Test
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: Environment preparation
        run: npm install
        working-directory: apps/app-${{ env.AppVersion }}
      - name: Running tests
        run: npm test
        working-directory: apps/app-${{ env.AppVersion }}
  build-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Variables assignment
        run: echo "AppVersion=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        env:
          AppVersion: ${{ env.AppVersion }}
      - name: Repository checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Artifact version preparation
        run: echo "TagVERSION=$(date +%y-%m-%d-%H%M)" >> $GITHUB_ENV
      - name: Image build and push
        uses: docker/build-push-action@v6
        with:
          context: apps/app-${{ env.AppVersion }}
          push: true
          tags: ${{ vars.DOCKER_HUB_USER }}/public-node-app:${{ env.TagVERSION }}
